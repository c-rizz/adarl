<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from src/adarl_ros/adarl_ros/models/hopper_v1.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="hopper">
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 1 1"/>
  </material>
  <link name="world"/>
  <link name="torso">
    <visual>
      <geometry>
        <cylinder length="0.4" radius="0.05"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.4" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.1415900000000003"/>
      <inertia ixx="0.04385136041666668" ixy="0.0" ixz="0.0" iyy="0.04385136041666668" iyz="0.0" izz="0.0006544979166666668"/>
    </inertial>
  </link>
  <gazebo reference="torso">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- We contrain the hopper to stay on the xz plane -->
  <!-- Gazebo does not support a planar joint, so we use two prismatic joints chained together -->
  <!-- We must also allow the torso link to rotate around the y axis, we use a continuous joint -->
  <link name="mid">
    <!-- Link used to chain the two prismatic joints together -->
    <inertial>
      <!-- gazebo requires inertia to be specified -->
      <mass value="0.0001"/>
      <!-- gazebo requires mass to be specified -->
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link>
  <link name="mid2">
    <!-- link used between the second prismatic joint and the continuous joint -->
    <inertial>
      <mass value="0.0001"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link>
  <joint name="torso_x_slider" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="world"/>
    <child link="mid"/>
    <limit effort="10000" lower="-1" upper="1000" velocity="10000"/>
  </joint>
  <joint name="torso_z_slider" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 1.2109999999999999"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <parent link="mid"/>
    <child link="mid2"/>
    <limit effort="10000" lower="-10" upper="1000" velocity="10000"/>
  </joint>
  <joint name="torso_pitch_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
    <!-- joint pose in the parent frame-->
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="mid2"/>
    <child link="torso"/>
  </joint>
  <link name="thigh">
    <visual>
      <geometry>
        <cylinder length="0.45" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -0.225"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.45" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -0.225"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.225"/>
      <mass value="3.5342887500000004"/>
      <inertia ixx="0.06185005312500001" ixy="0.0" ixz="0.0" iyy="0.06185005312500001" iyz="0.0" izz="0.0007363101562500001"/>
    </inertial>
  </link>
  <gazebo reference="thigh">
    <material>Gazebo/Grey</material>
  </gazebo>
  <joint name="torso_to_thigh" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.0 -0.2"/>
    <!-- joint pose in the parent frame-->
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="torso"/>
    <child link="thigh"/>
    <limit effort="1000" lower="0.0" upper="2.617991667" velocity="10000"/>
  </joint>
  <transmission name="torso_to_thigh_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <!-- Use a simple reducer transmission -->
    <joint name="torso_to_thigh">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <!-- Use an effort interface to control this joint (which is controlled through the actuator specified next) -->
    </joint>
    <actuator name="torso_to_thigh_actuator">
      <mechanicalReduction>200</mechanicalReduction>
      <!-- gear reduction for the joint -->
    </actuator>
  </transmission>
  <link name="leg">
    <visual>
      <geometry>
        <cylinder length="0.5" radius="0.04"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.5" radius="0.04"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.25"/>
      <mass value="2.513272"/>
      <inertia ixx="0.05336514213333334" ixy="0.0" ixz="0.0" iyy="0.05336514213333334" iyz="0.0" izz="0.00033510293333333335"/>
    </inertial>
  </link>
  <gazebo reference="leg">
    <material>Gazebo/Grey</material>
  </gazebo>
  <joint name="thigh_to_leg" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.0 -0.45"/>
    <parent link="thigh"/>
    <child link="leg"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="1000" lower="0.0" upper="2.617991667" velocity="10000"/>
  </joint>
  <transmission name="thigh_to_leg_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <!-- Use a simple reducer transmission -->
    <joint name="thigh_to_leg">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <!-- Use an effort interface to control this joint (which is controlled through the actuator specified next) -->
    </joint>
    <actuator name="thigh_to_leg_actuator">
      <mechanicalReduction>200</mechanicalReduction>
      <!-- gear reduction for the joint -->
    </actuator>
  </transmission>
  <link name="foot">
    <contact>
      <!-- PyBullet's way of specifying friction -->
      <lateral_friction value="1"/>
    </contact>
    <visual>
      <origin rpy="0 1.570795 0" xyz="0.065 0 0"/>
      <geometry>
        <cylinder length="0.39" radius="0.06"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 1.570795 0" xyz="0.26 0 0"/>
      <geometry>
        <sphere radius="0.06"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 1.570795 0" xyz="-0.13 0 0"/>
      <geometry>
        <sphere radius="0.06"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 1.570795 0" xyz="0.065 0 0"/>
      <geometry>
        <cylinder length="0.39" radius="0.06"/>
      </geometry>
    </collision>
    <collision>
      <origin rpy="0 1.570795 0" xyz="0.26 0 0"/>
      <geometry>
        <sphere radius="0.06"/>
      </geometry>
    </collision>
    <collision>
      <origin rpy="0 1.570795 0" xyz="-0.13 0 0"/>
      <geometry>
        <sphere radius="0.06"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 1.570795 0" xyz="0.065 0 0"/>
      <mass value="4.410792359999999"/>
      <inertia ixx="0.059876506286999996" ixy="0.0" ixz="0.0" iyy="0.059876506286999996" iyz="0.0" izz="0.0013232377079999997"/>
    </inertial>
  </link>
  <gazebo reference="foot">
    <material>Gazebo/Grey</material>
    <collision name="collision">
      <geometry>
        <plane>
          <normal>0 0 1</normal>
          <size>100 100</size>
        </plane>
      </geometry>
      <surface>
        <contact>
          <ode>
            <kp>2e+05</kp>
            <kd>80</kd>
            <!-- Equivalent to CFM = 10e-2, ERP = 0.2, with step size = 10^-3,
                See http://www.ode.org/ode-latest-userguide.html#sec_3_8_2 -->
            <soft_cfm>0.01</soft_cfm>
            <soft_erp>0.2</soft_erp>
          </ode>
          <bullet>
            <kp>2e+05</kp>
            <kd>80</kd>
            <!-- Equivalent to CFM = 10e-2, ERP = 0.2, with step size = 10^-3,
                See http://www.ode.org/ode-latest-userguide.html#sec_3_8_2 -->
            <soft_cfm>0.01</soft_cfm>
            <soft_erp>0.2</soft_erp>
          </bullet>
        </contact>
        <friction>
          <!--
          <bounce>
            <restitution_coefficient> 0.5 </restitution_coefficient>
            <threshold> 0.5 </threshold>
          </bounce>
          -->
          <torsional>
            <coefficient>0.5</coefficient>
          </torsional>
          <ode>
            <!-- gazebo reads the ode tag even for bullet, see https://github.com/osrf/gazebo/blob/gazebo9/gazebo/physics/bullet/BulletSurfaceParams.cc -->
            <!-- Some Coulomb friction coefficient examples:
                https://web.mit.edu/8.13/8.13c/references-fall/aip/aip-handbook-section2d.pdf
                https://engineeringlibrary.org/reference/coefficient-of-friction
                https://www.engineeringtoolbox.com/friction-coefficients-d_778.html
                https://www.tribonet.org/wiki/friction-coefficients-in-atmosphere-and-vacuum/
            -->
            <mu>1</mu>
            <mu2>1</mu2>
          </ode>
          <bullet>
            <friction>1</friction>
            <friction2>1</friction2>
          </bullet>
        </friction>
      </surface>
    </collision>
  </gazebo>
  <joint name="leg_to_foot" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 -0.5"/>
    <parent link="leg"/>
    <child link="foot"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="1000" lower="-0.7853975" upper="0.7853975" velocity="100"/>
  </joint>
  <transmission name="leg_to_foot_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <!-- Use a simple reducer transmission -->
    <joint name="leg_to_foot">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <!-- Use an effort interface to control this joint (which is controlled through the actuator specified next) -->
    </joint>
    <actuator name="leg_to_foot_actuator">
      <mechanicalReduction>200</mechanicalReduction>
      <!-- gear reduction for the joint -->
    </actuator>
  </transmission>
  <link name="camera_link"/>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 1.5707" xyz="0 -2.5 0.75"/>
    <parent link="mid"/>
    <child link="camera_link"/>
  </joint>
  <gazebo reference="camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <enable_gravity>false</enable_gravity>
    <sensor name="camera" type="camera">
      <camera name="camera">
        <horizontal_fov>1.2112574777777778</horizontal_fov>
        <image>
          <width>426</width>
          <height>240</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.01</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera/camera_controller">
        <cameraName>camera</cameraName>
        <frameName>camera_optical_frame</frameName>
        <updateRate>60</updateRate>
      </plugin>
      <always_on>true</always_on>
      <update_rate>60</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
</robot>

